name: Docker Image CI

on:
  push:
    branches:
      - "master"
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 */6 * * *'

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
    - name: Get latest commit hash
      id: get-latest-commit
      run: |
        echo "commit=$(git ls-remote https://github.com/zyachel/libremdb.git | head -n1 | awk '{print $1;}')" >> $GITHUB_OUTPUT
      shell: bash

    - uses: actions/cache@v4
      id: cache
      with:
        path: libremdb-built
        key: ${{ runner.os }}-${{ steps.get-latest-commit.outputs.commit }}-${{ hashFiles('**/lockfiles') }}

    # arm64 specific
    - name: Set up QEMU
      if: steps.cache.outputs.cache-hit != 'true'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64

    - name: Set up Docker Buildx
      if: steps.cache.outputs.cache-hit != 'true'
      uses: docker/setup-buildx-action@v3
    # arm64 specific

    - name: Check Out Repo
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
    
    - name: login into github package registry
      if: steps.cache.outputs.cache-hit != 'true'
      run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

    - name: Build and push Docker image
      if: steps.cache.outputs.cache-hit != 'true'
      uses: docker/build-push-action@v6
      with:
        context: .
        file: docker/Dockerfile
        platforms: linux/amd64,linux/arm64/v8
        push: true
        tags: ghcr.io/shindouj/libremdb:latest
        build-args: release=1
    
    - name: Set cache key
      if: steps.cache.outputs.cache-hit != 'true'
      run: echo "done" > libremdb-built
        
  workflow-keepalive:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: liskin/gh-workflow-keepalive@v1
